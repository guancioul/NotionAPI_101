{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/googleCalendar/getEventList/{calendarId}": {
            "get": {
                "description": "Get a list of events from Google Calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "googleCalendar"
                ],
                "summary": "Get Google Calendar Event List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID",
                        "name": "calendarId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "timeMin",
                        "name": "timeMin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "timeMax",
                        "name": "timeMax",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseModel.CalendarEvents"
                            }
                        }
                    },
                    "400": {
                        "description": "fail",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Calendar not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notion/createDBPage/{databaseId}": {
            "post": {
                "description": "Creates a new page in the specified database or as a child of an existing page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notion"
                ],
                "summary": "Create a new Notion Page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID",
                        "name": "databaseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestModel.NotionCreateDBPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseModel.Database"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notion/createDatabase/{pageId}": {
            "post": {
                "description": "Creates a database as a subpage in the specified parent page, with the specified properties schema. Currently, the parent of a new database must be a Notion page or a wiki database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notion"
                ],
                "summary": "Create a new Notion Database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "pageId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestModel.NotionCreateDatabaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseModel.NotionCreateDatabaseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/notion/queryDatabase/{databaseId}": {
            "post": {
                "description": "Queries a database, returning a paginated array of `Page` objects within the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notion"
                ],
                "summary": "Query Notion Database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Database ID",
                        "name": "databaseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestModel.NotionQueryDatabaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseModel.NotionQueryDatabaseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/sync/syncNotionToGoogleCalendar/{databaseId}/{calendarId}": {
            "post": {
                "description": "Sync Google Calendar to Notion for one day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sync"
                ],
                "summary": "Sync Google Calendar to Notion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Page ID",
                        "name": "databaseId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Calendar ID",
                        "name": "calendarId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responseModel.NotionCreateDatabaseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/attribute": {
            "get": {
                "description": "attribute",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "example"
                ],
                "summary": "attribute example",
                "parameters": [
                    {
                        "enum": [
                            "A",
                            "B",
                            "C"
                        ],
                        "type": "string",
                        "description": "string enums",
                        "name": "enumstring",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "integer",
                        "description": "int enums",
                        "name": "enumint",
                        "in": "query"
                    },
                    {
                        "enum": [
                            1.1,
                            1.2,
                            1.3
                        ],
                        "type": "number",
                        "description": "int enums",
                        "name": "enumnumber",
                        "in": "query"
                    },
                    {
                        "maxLength": 10,
                        "minLength": 5,
                        "type": "string",
                        "description": "string valid",
                        "name": "string",
                        "in": "query"
                    },
                    {
                        "maximum": 10,
                        "minimum": 1,
                        "type": "integer",
                        "description": "int valid",
                        "name": "int",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "A",
                        "description": "string default",
                        "name": "default",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/calc": {
            "get": {
                "description": "plus",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "example"
                ],
                "summary": "calc example",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "used for calc",
                        "name": "val1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "used for calc",
                        "name": "val2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/groups/{group_id}/accounts/{account_id}": {
            "get": {
                "description": "path params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "example"
                ],
                "summary": "path params example",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "group_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/header": {
            "get": {
                "description": "custome header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "example"
                ],
                "summary": "custome header example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/ping": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/post": {
            "post": {
                "description": "post request example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "post request example",
                "parameters": [
                    {
                        "description": "Account Info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "fail",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/examples/securities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "OAuth2Implicit": [
                            "admin",
                            "write"
                        ]
                    }
                ],
                "description": "custome header",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "custome header example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "account name"
                },
                "uuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "requestModel.NotionCreateDBPageRequest": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "requestModel.NotionCreateDatabaseRequest": {
            "type": "object",
            "properties": {
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "requestModel.NotionQueryDatabaseRequest": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "additionalProperties": true
                },
                "sorts": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                }
            }
        },
        "responseModel.CalendarEvents": {
            "type": "object",
            "properties": {
                "accessRole": {
                    "type": "string"
                },
                "defaultReminders": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "description": {
                    "type": "string"
                },
                "etag": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responseModel.Event"
                    }
                },
                "kind": {
                    "type": "string"
                },
                "nextSyncToken": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "responseModel.Database": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "cover": {},
                "created_by": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "object": {
                            "type": "string"
                        }
                    }
                },
                "created_time": {
                    "type": "string"
                },
                "icon": {},
                "id": {
                    "type": "string"
                },
                "last_edited_by": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "object": {
                            "type": "string"
                        }
                    }
                },
                "last_edited_time": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "parent": {
                    "type": "object",
                    "properties": {
                        "database_id": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "public_url": {},
                "url": {
                    "type": "string"
                }
            }
        },
        "responseModel.Event": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "creator": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        }
                    }
                },
                "end": {
                    "type": "object",
                    "properties": {
                        "dateTime": {
                            "type": "string"
                        },
                        "timeZone": {
                            "type": "string"
                        }
                    }
                },
                "etag": {
                    "type": "string"
                },
                "eventType": {
                    "type": "string"
                },
                "htmlLink": {
                    "type": "string"
                },
                "iCalUID": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "organizer": {
                    "type": "object",
                    "properties": {
                        "displayName": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string"
                        },
                        "self": {
                            "type": "boolean"
                        }
                    }
                },
                "sequence": {
                    "type": "integer"
                },
                "start": {
                    "type": "object",
                    "properties": {
                        "dateTime": {
                            "type": "string"
                        },
                        "timeZone": {
                            "type": "string"
                        }
                    }
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "responseModel.NotionCreateDatabaseResponse": {
            "type": "object",
            "properties": {
                "archived": {
                    "type": "boolean"
                },
                "created_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_inline": {
                    "type": "boolean"
                },
                "last_edited_time": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "parent": {
                    "type": "object",
                    "properties": {
                        "page_id": {
                            "type": "string"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "title": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "responseModel.NotionQueryDatabaseResponse": {
            "type": "object",
            "properties": {
                "developer_survey": {
                    "type": "string"
                },
                "has_more": {
                    "type": "boolean"
                },
                "next_cursor": {},
                "object": {
                    "type": "string"
                },
                "page_or_database": {
                    "type": "object"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responseModel.Database"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}